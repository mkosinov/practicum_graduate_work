name: assistant

services:
  api_1:
    build:
      context: ./assistant_api
    container_name: assistant.api.1
    entrypoint: >
      sh -c "poetry run gunicorn -w 4 -k uvicorn.workers.UvicornWorker --bind unix:/tmp/fastapi1.sock main:app"
    restart: unless-stopped
    volumes:
      - api_sockets:/tmp
      - logs:/app/logs
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "--unix-socket", "/tmp/fastapi1.sock", "http://localhost/docs"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - movies_project_net

  api_2:
    build:
      context: ./assistant_api
    container_name: assistant.api.2
    entrypoint: >
      sh -c "poetry run gunicorn -w 4 -k uvicorn.workers.UvicornWorker --bind unix:/tmp/fastapi2.sock main:app"
    restart: unless-stopped
    volumes:
      - api_sockets:/tmp
      - logs:/app/logs
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "--unix-socket", "/tmp/fastapi2.sock", "http://localhost/docs"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - movies_project_net      

  proxy:
    image: nginx:alpine
    container_name: assistant.proxy
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - logs:/etc/nginx/logs
      - api_sockets:/tmp
    ports:
      - 80:80
    depends_on:
      api_1:
        condition: service_healthy
      api_2:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/nginx_status"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - movies_project_net

  tracing:
    container_name: assistant.jaeger
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - 16686:16686
    expose:
      - 6831
      - 16686
    networks:
      movies_project_net:

volumes:
  api_sockets:
  logs:

networks:
  movies_project_net:
    external: true